use std::io;

fn main() {
    let mut str: String = String::new();
 
    io::stdin()
        .read_line(&mut str)
        .expect("Failed to read line");
 
    let v: Vec<&str> = str.trim().split(' ').collect();
 
    let n: i64 = v[0].parse().expect("REASON");
    let k: i64 = v[0].parse().expect("REASON");
    let mut nums: Vec<i64> = Vec::new();

    let mut temp_str: String = String::new();

    io::stdin()
        .read_line(&mut temp_str)
        .expect("Failed to read line");

    let temp_v: Vec<&str> = str.trim().split(' ').collect();
    for i in 0..k as usize {
        let val: i64 = temp_v[i].parse().expect("REASON");
        nums.push(val);
    }
    
    let mut s: Vec<i64> = vec![0; k as usize + 1];
    s[0] = n;
    
    for j in 0..k as usize {
        let mut temp: i64 = s[0];
        for i in 1..=j + 1 {
            s[i] += temp/nums[j];
            temp = s[i];
        }
    }
    
    let mut res: i64 = 0;
    let mut idx: i64 = 1;
    for i in 0..=k as usize {
        res += s[i]*idx;
        idx *= -1
    }
    
    println!("{:?}", res)
}
